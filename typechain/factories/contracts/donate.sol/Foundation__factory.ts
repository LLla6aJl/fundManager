/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Foundation,
  FoundationInterface,
} from "../../../contracts/donate.sol/Foundation";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_donationReceiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "required",
        type: "bool",
      },
    ],
    name: "MinimumDonate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxAmount",
        type: "uint256",
      },
    ],
    name: "WithdrawMax",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "donation",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Donate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "donationReceiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DonationWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "donate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "donationReceiver",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDonators",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSumOfDonations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "investors",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "payments",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendHelp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "updateFoundationDescription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260405162001bbf38038062001bbf8339818101604052810190620000299190620003c7565b620000496200003d6200010360201b60201c565b6200010b60201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600290816200009b919062000678565b5034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503460056000828254620000f491906200078e565b925050819055505050620007c9565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200021082620001e3565b9050919050565b620002228162000203565b81146200022e57600080fd5b50565b600081519050620002428162000217565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200029d8262000252565b810181811067ffffffffffffffff82111715620002bf57620002be62000263565b5b80604052505050565b6000620002d4620001cf565b9050620002e2828262000292565b919050565b600067ffffffffffffffff82111562000305576200030462000263565b5b620003108262000252565b9050602081019050919050565b60005b838110156200033d57808201518184015260208101905062000320565b60008484015250505050565b6000620003606200035a84620002e7565b620002c8565b9050828152602081018484840111156200037f576200037e6200024d565b5b6200038c8482856200031d565b509392505050565b600082601f830112620003ac57620003ab62000248565b5b8151620003be84826020860162000349565b91505092915050565b60008060408385031215620003e157620003e0620001d9565b5b6000620003f18582860162000231565b925050602083015167ffffffffffffffff811115620004155762000414620001de565b5b620004238582860162000394565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200048057607f821691505b60208210810362000496576200049562000438565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004c1565b6200050c8683620004c1565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000559620005536200054d8462000524565b6200052e565b62000524565b9050919050565b6000819050919050565b620005758362000538565b6200058d620005848262000560565b848454620004ce565b825550505050565b600090565b620005a462000595565b620005b18184846200056a565b505050565b5b81811015620005d957620005cd6000826200059a565b600181019050620005b7565b5050565b601f8211156200062857620005f2816200049c565b620005fd84620004b1565b810160208510156200060d578190505b620006256200061c85620004b1565b830182620005b6565b50505b505050565b600082821c905092915050565b60006200064d600019846008026200062d565b1980831691505092915050565b60006200066883836200063a565b9150826002028217905092915050565b62000683826200042d565b67ffffffffffffffff8111156200069f576200069e62000263565b5b620006ab825462000467565b620006b8828285620005dd565b600060209050601f831160018114620006f05760008415620006db578287015190505b620006e785826200065a565b86555062000757565b601f19841662000700866200049c565b60005b828110156200072a5784890151825560018201915060208501945060208101905062000703565b868310156200074a578489015162000746601f8916826200063a565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200079b8262000524565b9150620007a88362000524565b9250828201905080821115620007c357620007c26200075f565b5b92915050565b6113e680620007d96000396000f3fe6080604052600436106100ab5760003560e01c8063c742d86711610064578063c742d867146101f8578063d38e985814610221578063e2982c211461024a578063ed88c68e14610287578063f2fde38b14610291578063f3a01489146102ba576100f3565b8063213ea6bb146100f85780633feb5f2b14610123578063715018a6146101605780637284e416146101775780638da5cb5b146101a2578063bf1482fa146101cd576100f3565b366100f3577f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f8852587433346040516100e19291906109e1565b60405180910390a16100f16102e5565b005b600080fd5b34801561010457600080fd5b5061010d610486565b60405161011a9190610a2b565b60405180910390f35b34801561012f57600080fd5b5061014a60048036038101906101459190610a86565b6104ac565b6040516101579190610ab3565b60405180910390f35b34801561016c57600080fd5b506101756104eb565b005b34801561018357600080fd5b5061018c6104ff565b6040516101999190610b5e565b60405180910390f35b3480156101ae57600080fd5b506101b761058d565b6040516101c49190610ab3565b60405180910390f35b3480156101d957600080fd5b506101e26105b6565b6040516101ef9190610c3e565b60405180910390f35b34801561020457600080fd5b5061021f600480360381019061021a9190610a86565b61064a565b005b34801561022d57600080fd5b5061024860048036038101906102439190610d95565b61077d565b005b34801561025657600080fd5b50610271600480360381019061026c9190610e0a565b610798565b60405161027e9190610e37565b60405180910390f35b61028f6102e5565b005b34801561029d57600080fd5b506102b860048036038101906102b39190610e0a565b6107b0565b005b3480156102c657600080fd5b506102cf610833565b6040516102dc9190610e37565b60405180910390f35b6001341015610331573460013410156040517f1b000322000000000000000000000000000000000000000000000000000000008152600401610328929190610e6d565b60405180910390fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036103dc576004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461042b9190610ec5565b9250508190555034600560008282546104449190610ec5565b925050819055507f0553260a2e46b0577270d8992db02d30856ca880144c72d6e9503760946aef13333460405161047c9291906109e1565b60405180910390a1565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600481815481106104bc57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104f361083d565b6104fd60006108bb565b565b6002805461050c90610f28565b80601f016020809104026020016040519081016040528092919081815260200182805461053890610f28565b80156105855780601f1061055a57610100808354040283529160200191610585565b820191906000526020600020905b81548152906001019060200180831161056857829003601f168201915b505050505081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606000600480548060200260200160405190810160405280929190818152602001828054801561063c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116105f2575b505050505090508091505090565b61065261083d565b80600554101561069d57806005546040517f81310dc7000000000000000000000000000000000000000000000000000000008152600401610694929190610f59565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610705573d6000803e3d6000fd5b5080600560008282546107189190610f82565b925050819055507fce641b7f6d5261d483348cd0ba10e64db3a5e4b2db5c202b7d433204ee429111600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051610772929190611015565b60405180910390a150565b61078561083d565b806002908161079491906111e0565b5050565b60036020528060005260406000206000915090505481565b6107b861083d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610827576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081e90611324565b60405180910390fd5b610830816108bb565b50565b6000600554905090565b61084561097f565b73ffffffffffffffffffffffffffffffffffffffff1661086361058d565b73ffffffffffffffffffffffffffffffffffffffff16146108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b090611390565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109b282610987565b9050919050565b6109c2816109a7565b82525050565b6000819050919050565b6109db816109c8565b82525050565b60006040820190506109f660008301856109b9565b610a0360208301846109d2565b9392505050565b6000610a1582610987565b9050919050565b610a2581610a0a565b82525050565b6000602082019050610a406000830184610a1c565b92915050565b6000604051905090565b600080fd5b600080fd5b610a63816109c8565b8114610a6e57600080fd5b50565b600081359050610a8081610a5a565b92915050565b600060208284031215610a9c57610a9b610a50565b5b6000610aaa84828501610a71565b91505092915050565b6000602082019050610ac860008301846109b9565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b08578082015181840152602081019050610aed565b60008484015250505050565b6000601f19601f8301169050919050565b6000610b3082610ace565b610b3a8185610ad9565b9350610b4a818560208601610aea565b610b5381610b14565b840191505092915050565b60006020820190508181036000830152610b788184610b25565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610bb5816109a7565b82525050565b6000610bc78383610bac565b60208301905092915050565b6000602082019050919050565b6000610beb82610b80565b610bf58185610b8b565b9350610c0083610b9c565b8060005b83811015610c31578151610c188882610bbb565b9750610c2383610bd3565b925050600181019050610c04565b5085935050505092915050565b60006020820190508181036000830152610c588184610be0565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610ca282610b14565b810181811067ffffffffffffffff82111715610cc157610cc0610c6a565b5b80604052505050565b6000610cd4610a46565b9050610ce08282610c99565b919050565b600067ffffffffffffffff821115610d0057610cff610c6a565b5b610d0982610b14565b9050602081019050919050565b82818337600083830152505050565b6000610d38610d3384610ce5565b610cca565b905082815260208101848484011115610d5457610d53610c65565b5b610d5f848285610d16565b509392505050565b600082601f830112610d7c57610d7b610c60565b5b8135610d8c848260208601610d25565b91505092915050565b600060208284031215610dab57610daa610a50565b5b600082013567ffffffffffffffff811115610dc957610dc8610a55565b5b610dd584828501610d67565b91505092915050565b610de7816109a7565b8114610df257600080fd5b50565b600081359050610e0481610dde565b92915050565b600060208284031215610e2057610e1f610a50565b5b6000610e2e84828501610df5565b91505092915050565b6000602082019050610e4c60008301846109d2565b92915050565b60008115159050919050565b610e6781610e52565b82525050565b6000604082019050610e8260008301856109d2565b610e8f6020830184610e5e565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ed0826109c8565b9150610edb836109c8565b9250828201905080821115610ef357610ef2610e96565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610f4057607f821691505b602082108103610f5357610f52610ef9565b5b50919050565b6000604082019050610f6e60008301856109d2565b610f7b60208301846109d2565b9392505050565b6000610f8d826109c8565b9150610f98836109c8565b9250828203905081811115610fb057610faf610e96565b5b92915050565b6000819050919050565b6000610fdb610fd6610fd184610987565b610fb6565b610987565b9050919050565b6000610fed82610fc0565b9050919050565b6000610fff82610fe2565b9050919050565b61100f81610ff4565b82525050565b600060408201905061102a6000830185611006565b61103760208301846109d2565b9392505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026110a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611063565b6110aa8683611063565b95508019841693508086168417925050509392505050565b60006110dd6110d86110d3846109c8565b610fb6565b6109c8565b9050919050565b6000819050919050565b6110f7836110c2565b61110b611103826110e4565b848454611070565b825550505050565b600090565b611120611113565b61112b8184846110ee565b505050565b5b8181101561114f57611144600082611118565b600181019050611131565b5050565b601f821115611194576111658161103e565b61116e84611053565b8101602085101561117d578190505b61119161118985611053565b830182611130565b50505b505050565b600082821c905092915050565b60006111b760001984600802611199565b1980831691505092915050565b60006111d083836111a6565b9150826002028217905092915050565b6111e982610ace565b67ffffffffffffffff81111561120257611201610c6a565b5b61120c8254610f28565b611217828285611153565b600060209050601f83116001811461124a5760008415611238578287015190505b61124285826111c4565b8655506112aa565b601f1984166112588661103e565b60005b828110156112805784890151825560018201915060208501945060208101905061125b565b8683101561129d5784890151611299601f8916826111a6565b8355505b6001600288020188555050505b505050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061130e602683610ad9565b9150611319826112b2565b604082019050919050565b6000602082019050818103600083015261133d81611301565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061137a602083610ad9565b915061138582611344565b602082019050919050565b600060208201905081810360008301526113a98161136d565b905091905056fea2646970667358221220c47c5975969a25617abaa18ce2a33b2ac64e44cb3f6e608759686f7cc4b3271364736f6c63430008120033";

type FoundationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FoundationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Foundation__factory extends ContractFactory {
  constructor(...args: FoundationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _donationReceiver: PromiseOrValue<string>,
    _description: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Foundation> {
    return super.deploy(
      _donationReceiver,
      _description,
      overrides || {}
    ) as Promise<Foundation>;
  }
  override getDeployTransaction(
    _donationReceiver: PromiseOrValue<string>,
    _description: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _donationReceiver,
      _description,
      overrides || {}
    );
  }
  override attach(address: string): Foundation {
    return super.attach(address) as Foundation;
  }
  override connect(signer: Signer): Foundation__factory {
    return super.connect(signer) as Foundation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FoundationInterface {
    return new utils.Interface(_abi) as FoundationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Foundation {
    return new Contract(address, _abi, signerOrProvider) as Foundation;
  }
}
