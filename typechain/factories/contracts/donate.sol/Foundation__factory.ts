/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Foundation,
  FoundationInterface,
} from "../../../contracts/donate.sol/Foundation";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_donationReceiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "required",
        type: "bool",
      },
    ],
    name: "MinimumDonate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxAmount",
        type: "uint256",
      },
    ],
    name: "WithdrawMax",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "donation",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Donate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "donationReceiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DonationWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "donate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "donationReceiver",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDonators",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSumOfDonations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "investors",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "payments",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendHelp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "updateFoundationDescription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260405162001c1338038062001c138339818101604052810190620000299190620003c7565b620000496200003d6200010360201b60201c565b6200010b60201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600290816200009b919062000678565b5034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503460056000828254620000f491906200078e565b925050819055505050620007c9565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200021082620001e3565b9050919050565b620002228162000203565b81146200022e57600080fd5b50565b600081519050620002428162000217565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200029d8262000252565b810181811067ffffffffffffffff82111715620002bf57620002be62000263565b5b80604052505050565b6000620002d4620001cf565b9050620002e2828262000292565b919050565b600067ffffffffffffffff82111562000305576200030462000263565b5b620003108262000252565b9050602081019050919050565b60005b838110156200033d57808201518184015260208101905062000320565b60008484015250505050565b6000620003606200035a84620002e7565b620002c8565b9050828152602081018484840111156200037f576200037e6200024d565b5b6200038c8482856200031d565b509392505050565b600082601f830112620003ac57620003ab62000248565b5b8151620003be84826020860162000349565b91505092915050565b60008060408385031215620003e157620003e0620001d9565b5b6000620003f18582860162000231565b925050602083015167ffffffffffffffff811115620004155762000414620001de565b5b620004238582860162000394565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200048057607f821691505b60208210810362000496576200049562000438565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004c1565b6200050c8683620004c1565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000559620005536200054d8462000524565b6200052e565b62000524565b9050919050565b6000819050919050565b620005758362000538565b6200058d620005848262000560565b848454620004ce565b825550505050565b600090565b620005a462000595565b620005b18184846200056a565b505050565b5b81811015620005d957620005cd6000826200059a565b600181019050620005b7565b5050565b601f8211156200062857620005f2816200049c565b620005fd84620004b1565b810160208510156200060d578190505b620006256200061c85620004b1565b830182620005b6565b50505b505050565b600082821c905092915050565b60006200064d600019846008026200062d565b1980831691505092915050565b60006200066883836200063a565b9150826002028217905092915050565b62000683826200042d565b67ffffffffffffffff8111156200069f576200069e62000263565b5b620006ab825462000467565b620006b8828285620005dd565b600060209050601f831160018114620006f05760008415620006db578287015190505b620006e785826200065a565b86555062000757565b601f19841662000700866200049c565b60005b828110156200072a5784890151825560018201915060208501945060208101905062000703565b868310156200074a578489015162000746601f8916826200063a565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200079b8262000524565b9150620007a88362000524565b9250828201905080821115620007c357620007c26200075f565b5b92915050565b61143a80620007d96000396000f3fe6080604052600436106100ab5760003560e01c8063c742d86711610064578063c742d8671461024c578063d38e985814610275578063e2982c211461029e578063ed88c68e146102db578063f2fde38b146102e5578063f3a014891461030e57610147565b8063213ea6bb1461014c5780633feb5f2b14610177578063715018a6146101b45780637284e416146101cb5780638da5cb5b146101f6578063bf1482fa1461022157610147565b36610147577f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f8852587433346040516100e1929190610a35565b60405180910390a13073ffffffffffffffffffffffffffffffffffffffff1663ed88c68e6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561013157600080fd5b505af1158015610145573d6000803e3d6000fd5b005b600080fd5b34801561015857600080fd5b50610161610339565b60405161016e9190610a7f565b60405180910390f35b34801561018357600080fd5b5061019e60048036038101906101999190610ada565b61035f565b6040516101ab9190610b07565b60405180910390f35b3480156101c057600080fd5b506101c961039e565b005b3480156101d757600080fd5b506101e06103b2565b6040516101ed9190610bb2565b60405180910390f35b34801561020257600080fd5b5061020b610440565b6040516102189190610b07565b60405180910390f35b34801561022d57600080fd5b50610236610469565b6040516102439190610c92565b60405180910390f35b34801561025857600080fd5b50610273600480360381019061026e9190610ada565b6104fd565b005b34801561028157600080fd5b5061029c60048036038101906102979190610de9565b610630565b005b3480156102aa57600080fd5b506102c560048036038101906102c09190610e5e565b61064b565b6040516102d29190610e8b565b60405180910390f35b6102e3610663565b005b3480156102f157600080fd5b5061030c60048036038101906103079190610e5e565b610804565b005b34801561031a57600080fd5b50610323610887565b6040516103309190610e8b565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6004818154811061036f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103a6610891565b6103b0600061090f565b565b600280546103bf90610ed5565b80601f01602080910402602001604051908101604052809291908181526020018280546103eb90610ed5565b80156104385780601f1061040d57610100808354040283529160200191610438565b820191906000526020600020905b81548152906001019060200180831161041b57829003601f168201915b505050505081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600060048054806020026020016040519081016040528092919081815260200182805480156104ef57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116104a5575b505050505090508091505090565b610505610891565b80600554101561055057806005546040517f81310dc7000000000000000000000000000000000000000000000000000000008152600401610547929190610f06565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156105b8573d6000803e3d6000fd5b5080600560008282546105cb9190610f5e565b925050819055507fce641b7f6d5261d483348cd0ba10e64db3a5e4b2db5c202b7d433204ee429111600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051610625929190610ff1565b60405180910390a150565b610638610891565b806002908161064791906111bc565b5050565b60036020528060005260406000206000915090505481565b60013410156106af573460013410156040517f1b0003220000000000000000000000000000000000000000000000000000000081526004016106a69291906112a9565b60405180910390fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540361075a576004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107a991906112d2565b9250508190555034600560008282546107c291906112d2565b925050819055507f0553260a2e46b0577270d8992db02d30856ca880144c72d6e9503760946aef1333346040516107fa929190610a35565b60405180910390a1565b61080c610891565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361087b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087290611378565b60405180910390fd5b6108848161090f565b50565b6000600554905090565b6108996109d3565b73ffffffffffffffffffffffffffffffffffffffff166108b7610440565b73ffffffffffffffffffffffffffffffffffffffff161461090d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610904906113e4565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a06826109db565b9050919050565b610a16816109fb565b82525050565b6000819050919050565b610a2f81610a1c565b82525050565b6000604082019050610a4a6000830185610a0d565b610a576020830184610a26565b9392505050565b6000610a69826109db565b9050919050565b610a7981610a5e565b82525050565b6000602082019050610a946000830184610a70565b92915050565b6000604051905090565b600080fd5b600080fd5b610ab781610a1c565b8114610ac257600080fd5b50565b600081359050610ad481610aae565b92915050565b600060208284031215610af057610aef610aa4565b5b6000610afe84828501610ac5565b91505092915050565b6000602082019050610b1c6000830184610a0d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b5c578082015181840152602081019050610b41565b60008484015250505050565b6000601f19601f8301169050919050565b6000610b8482610b22565b610b8e8185610b2d565b9350610b9e818560208601610b3e565b610ba781610b68565b840191505092915050565b60006020820190508181036000830152610bcc8184610b79565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610c09816109fb565b82525050565b6000610c1b8383610c00565b60208301905092915050565b6000602082019050919050565b6000610c3f82610bd4565b610c498185610bdf565b9350610c5483610bf0565b8060005b83811015610c85578151610c6c8882610c0f565b9750610c7783610c27565b925050600181019050610c58565b5085935050505092915050565b60006020820190508181036000830152610cac8184610c34565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610cf682610b68565b810181811067ffffffffffffffff82111715610d1557610d14610cbe565b5b80604052505050565b6000610d28610a9a565b9050610d348282610ced565b919050565b600067ffffffffffffffff821115610d5457610d53610cbe565b5b610d5d82610b68565b9050602081019050919050565b82818337600083830152505050565b6000610d8c610d8784610d39565b610d1e565b905082815260208101848484011115610da857610da7610cb9565b5b610db3848285610d6a565b509392505050565b600082601f830112610dd057610dcf610cb4565b5b8135610de0848260208601610d79565b91505092915050565b600060208284031215610dff57610dfe610aa4565b5b600082013567ffffffffffffffff811115610e1d57610e1c610aa9565b5b610e2984828501610dbb565b91505092915050565b610e3b816109fb565b8114610e4657600080fd5b50565b600081359050610e5881610e32565b92915050565b600060208284031215610e7457610e73610aa4565b5b6000610e8284828501610e49565b91505092915050565b6000602082019050610ea06000830184610a26565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610eed57607f821691505b602082108103610f0057610eff610ea6565b5b50919050565b6000604082019050610f1b6000830185610a26565b610f286020830184610a26565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f6982610a1c565b9150610f7483610a1c565b9250828203905081811115610f8c57610f8b610f2f565b5b92915050565b6000819050919050565b6000610fb7610fb2610fad846109db565b610f92565b6109db565b9050919050565b6000610fc982610f9c565b9050919050565b6000610fdb82610fbe565b9050919050565b610feb81610fd0565b82525050565b60006040820190506110066000830185610fe2565b6110136020830184610a26565b9392505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261107c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261103f565b611086868361103f565b95508019841693508086168417925050509392505050565b60006110b96110b46110af84610a1c565b610f92565b610a1c565b9050919050565b6000819050919050565b6110d38361109e565b6110e76110df826110c0565b84845461104c565b825550505050565b600090565b6110fc6110ef565b6111078184846110ca565b505050565b5b8181101561112b576111206000826110f4565b60018101905061110d565b5050565b601f821115611170576111418161101a565b61114a8461102f565b81016020851015611159578190505b61116d6111658561102f565b83018261110c565b50505b505050565b600082821c905092915050565b600061119360001984600802611175565b1980831691505092915050565b60006111ac8383611182565b9150826002028217905092915050565b6111c582610b22565b67ffffffffffffffff8111156111de576111dd610cbe565b5b6111e88254610ed5565b6111f382828561112f565b600060209050601f8311600181146112265760008415611214578287015190505b61121e85826111a0565b865550611286565b601f1984166112348661101a565b60005b8281101561125c57848901518255600182019150602085019450602081019050611237565b868310156112795784890151611275601f891682611182565b8355505b6001600288020188555050505b505050505050565b60008115159050919050565b6112a38161128e565b82525050565b60006040820190506112be6000830185610a26565b6112cb602083018461129a565b9392505050565b60006112dd82610a1c565b91506112e883610a1c565b9250828201905080821115611300576112ff610f2f565b5b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611362602683610b2d565b915061136d82611306565b604082019050919050565b6000602082019050818103600083015261139181611355565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006113ce602083610b2d565b91506113d982611398565b602082019050919050565b600060208201905081810360008301526113fd816113c1565b905091905056fea264697066735822122057db2c35da2a19f77520716a0066e9d4e6f9273afbf0ae486860ceda23eae0c464736f6c63430008120033";

type FoundationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FoundationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Foundation__factory extends ContractFactory {
  constructor(...args: FoundationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _donationReceiver: PromiseOrValue<string>,
    _description: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Foundation> {
    return super.deploy(
      _donationReceiver,
      _description,
      overrides || {}
    ) as Promise<Foundation>;
  }
  override getDeployTransaction(
    _donationReceiver: PromiseOrValue<string>,
    _description: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _donationReceiver,
      _description,
      overrides || {}
    );
  }
  override attach(address: string): Foundation {
    return super.attach(address) as Foundation;
  }
  override connect(signer: Signer): Foundation__factory {
    return super.connect(signer) as Foundation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FoundationInterface {
    return new utils.Interface(_abi) as FoundationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Foundation {
    return new Contract(address, _abi, signerOrProvider) as Foundation;
  }
}
