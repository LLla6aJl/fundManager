/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Foundation,
  FoundationInterface,
} from "../../../contracts/donate.sol/Foundation";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_donationReceiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "required",
        type: "bool",
      },
    ],
    name: "MinimumDonate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxAmount",
        type: "uint256",
      },
    ],
    name: "WithdrawMax",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "donation",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Donate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "donationReceiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DonationWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "donate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "donationReceiver",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDonators",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSumOfDonations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "investors",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "payments",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendHelp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "updateFoundationDescription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260405162001fb238038062001fb2833981810160405281019062000029919062000456565b620000496200003d6200018f60201b60201c565b6200019760201b60201c565b620000656786f7283ef5b42cf060c01b6200025b60201b60201c565b620000816746e98a4182a2b8f260c01b6200025b60201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000de67632617fc55f07dc560c01b6200025b60201b60201c565b8060029081620000ef919062000707565b506200010c67816de726eea338c060c01b6200025b60201b60201c565b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506200016c67b85b26a072f322d560c01b6200025b60201b60201c565b34600560008282546200018091906200081d565b92505081905550505062000858565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200029f8262000272565b9050919050565b620002b18162000292565b8114620002bd57600080fd5b50565b600081519050620002d181620002a6565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200032c82620002e1565b810181811067ffffffffffffffff821117156200034e576200034d620002f2565b5b80604052505050565b6000620003636200025e565b905062000371828262000321565b919050565b600067ffffffffffffffff821115620003945762000393620002f2565b5b6200039f82620002e1565b9050602081019050919050565b60005b83811015620003cc578082015181840152602081019050620003af565b60008484015250505050565b6000620003ef620003e98462000376565b62000357565b9050828152602081018484840111156200040e576200040d620002dc565b5b6200041b848285620003ac565b509392505050565b600082601f8301126200043b576200043a620002d7565b5b81516200044d848260208601620003d8565b91505092915050565b6000806040838503121562000470576200046f62000268565b5b60006200048085828601620002c0565b925050602083015167ffffffffffffffff811115620004a457620004a36200026d565b5b620004b28582860162000423565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200050f57607f821691505b602082108103620005255762000524620004c7565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200058f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000550565b6200059b868362000550565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620005e8620005e2620005dc84620005b3565b620005bd565b620005b3565b9050919050565b6000819050919050565b6200060483620005c7565b6200061c6200061382620005ef565b8484546200055d565b825550505050565b600090565b6200063362000624565b62000640818484620005f9565b505050565b5b8181101562000668576200065c60008262000629565b60018101905062000646565b5050565b601f821115620006b75762000681816200052b565b6200068c8462000540565b810160208510156200069c578190505b620006b4620006ab8562000540565b83018262000645565b50505b505050565b600082821c905092915050565b6000620006dc60001984600802620006bc565b1980831691505092915050565b6000620006f78383620006c9565b9150826002028217905092915050565b6200071282620004bc565b67ffffffffffffffff8111156200072e576200072d620002f2565b5b6200073a8254620004f6565b620007478282856200066c565b600060209050601f8311600181146200077f57600084156200076a578287015190505b620007768582620006e9565b865550620007e6565b601f1984166200078f866200052b565b60005b82811015620007b95784890151825560018201915060208501945060208101905062000792565b86831015620007d95784890151620007d5601f891682620006c9565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200082a82620005b3565b91506200083783620005b3565b9250828201905080821115620008525762000851620007ee565b5b92915050565b61174a80620008686000396000f3fe6080604052600436106100ab5760003560e01c8063c742d86711610064578063c742d86714610220578063d38e985814610249578063e2982c2114610272578063ed88c68e146102af578063f2fde38b146102b9578063f3a01489146102e25761011b565b8063213ea6bb146101205780633feb5f2b1461014b578063715018a6146101885780637284e4161461019f5780638da5cb5b146101ca578063bf1482fa146101f55761011b565b3661011b576100c467fde740bc0fddaf9f60c01b61030d565b7f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f8852587433346040516100f5929190610d45565b60405180910390a161011167329fe8956b05b4d360c01b61030d565b610119610310565b005b600080fd5b34801561012c57600080fd5b506101356105f6565b6040516101429190610d8f565b60405180910390f35b34801561015757600080fd5b50610172600480360381019061016d9190610dea565b61061c565b60405161017f9190610e17565b60405180910390f35b34801561019457600080fd5b5061019d61065b565b005b3480156101ab57600080fd5b506101b461066f565b6040516101c19190610ec2565b60405180910390f35b3480156101d657600080fd5b506101df6106fd565b6040516101ec9190610e17565b60405180910390f35b34801561020157600080fd5b5061020a610726565b6040516102179190610fa2565b60405180910390f35b34801561022c57600080fd5b5061024760048036038101906102429190610dea565b61081e565b005b34801561025557600080fd5b50610270600480360381019061026b91906110f9565b610a55565b005b34801561027e57600080fd5b506102996004803603810190610294919061116e565b610ac0565b6040516102a6919061119b565b60405180910390f35b6102b7610310565b005b3480156102c557600080fd5b506102e060048036038101906102db919061116e565b610ad8565b005b3480156102ee57600080fd5b506102f7610b5b565b604051610304919061119b565b60405180910390f35b50565b610324675f415b70df9ada0860c01b61030d565b6103386790fd7d1be857b85d60c01b61030d565b61034c67c147acbc9e3f3a5860c01b61030d565b60013410156103c057610369674a78ec57a2a5000d60c01b61030d565b61037d671399f9185ea90bf260c01b61030d565b3460013410156040517f1b0003220000000000000000000000000000000000000000000000000000000081526004016103b79291906111d1565b60405180910390fd5b6103d467d51f2cc620cedbf560c01b61030d565b6103e86724c5b5cc1e9b826460c01b61030d565b6103fc6778f33ee6430ba89360c01b61030d565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036104e75761045767aab60378f2ca07ad60c01b61030d565b61046b67734923a19df7287760c01b61030d565b61047f672a4dbf97fbd742ca60c01b61030d565b6004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104fc565b6104fb670abedf1b93a56d7760c01b61030d565b5b610510673068616892473a6f60c01b61030d565b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461055f9190611229565b9250508190555061057a67d6bd47ae44c5a70960c01b61030d565b346005600082825461058c9190611229565b925050819055506105a7678cd231b44babe4f560c01b61030d565b6105bb67c431cf87842c2dba60c01b61030d565b7f0553260a2e46b0577270d8992db02d30856ca880144c72d6e9503760946aef1333346040516105ec929190610d45565b60405180910390a1565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6004818154811061062c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610663610ba1565b61066d6000610c1f565b565b6002805461067c9061128c565b80601f01602080910402602001604051908101604052809291908181526020018280546106a89061128c565b80156106f55780601f106106ca576101008083540402835291602001916106f5565b820191906000526020600020905b8154815290600101906020018083116106d857829003601f168201915b505050505081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606061073c674a596b6d53b985d660c01b61030d565b6107506717bb791a116b9f9b60c01b61030d565b61076467bfb4859eafe73cfa60c01b61030d565b600060048054806020026020016040519081016040528092919081815260200182805480156107e857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161079e575b50505050509050610803671566dd1c0c51f89a60c01b61030d565b6108176702487d17deb4694560c01b61030d565b8091505090565b61083267dd88d30f3a25417060c01b61030d565b61083a610ba1565b61084e671f9a8aeef57d11b760c01b61030d565b61086267d6e18bc9d536ff2560c01b61030d565b61087667c6944cd246e94f2660c01b61030d565b61088a679298ae4edc587a9c60c01b61030d565b8060055410156108fd576108a867e82095303f9f9f6960c01b61030d565b6108bc676c3a12248848f67160c01b61030d565b806005546040517f81310dc70000000000000000000000000000000000000000000000000000000081526004016108f49291906112bd565b60405180910390fd5b610911678097075dc9011ec260c01b61030d565b61092567fa185fb9108b3cbf60c01b61030d565b610939678b0d0a4d60a4e71e60c01b61030d565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156109a1573d6000803e3d6000fd5b506109b667275229457af453e260c01b61030d565b80600560008282546109c891906112e6565b925050819055506109e367cf6cd8531f9469dd60c01b61030d565b6109f7673d7b93cae90292a760c01b61030d565b7fce641b7f6d5261d483348cd0ba10e64db3a5e4b2db5c202b7d433204ee429111600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051610a4a929190611379565b60405180910390a150565b610a6967d498d361b5e3aa4b60c01b61030d565b610a71610ba1565b610a8567f0ef49c6129e9b2a60c01b61030d565b610a9967b54fe4ada8f5c4fb60c01b61030d565b610aad6730489749cf88692b60c01b61030d565b8060029081610abc9190611544565b5050565b60036020528060005260406000206000915090505481565b610ae0610ba1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4690611688565b60405180910390fd5b610b5881610c1f565b50565b6000610b7167cd30162e18b9476460c01b61030d565b610b8567882fef62e88b07f260c01b61030d565b610b9967e925637314d26b5360c01b61030d565b600554905090565b610ba9610ce3565b73ffffffffffffffffffffffffffffffffffffffff16610bc76106fd565b73ffffffffffffffffffffffffffffffffffffffff1614610c1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c14906116f4565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d1682610ceb565b9050919050565b610d2681610d0b565b82525050565b6000819050919050565b610d3f81610d2c565b82525050565b6000604082019050610d5a6000830185610d1d565b610d676020830184610d36565b9392505050565b6000610d7982610ceb565b9050919050565b610d8981610d6e565b82525050565b6000602082019050610da46000830184610d80565b92915050565b6000604051905090565b600080fd5b600080fd5b610dc781610d2c565b8114610dd257600080fd5b50565b600081359050610de481610dbe565b92915050565b600060208284031215610e0057610dff610db4565b5b6000610e0e84828501610dd5565b91505092915050565b6000602082019050610e2c6000830184610d1d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e6c578082015181840152602081019050610e51565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e9482610e32565b610e9e8185610e3d565b9350610eae818560208601610e4e565b610eb781610e78565b840191505092915050565b60006020820190508181036000830152610edc8184610e89565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610f1981610d0b565b82525050565b6000610f2b8383610f10565b60208301905092915050565b6000602082019050919050565b6000610f4f82610ee4565b610f598185610eef565b9350610f6483610f00565b8060005b83811015610f95578151610f7c8882610f1f565b9750610f8783610f37565b925050600181019050610f68565b5085935050505092915050565b60006020820190508181036000830152610fbc8184610f44565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61100682610e78565b810181811067ffffffffffffffff8211171561102557611024610fce565b5b80604052505050565b6000611038610daa565b90506110448282610ffd565b919050565b600067ffffffffffffffff82111561106457611063610fce565b5b61106d82610e78565b9050602081019050919050565b82818337600083830152505050565b600061109c61109784611049565b61102e565b9050828152602081018484840111156110b8576110b7610fc9565b5b6110c384828561107a565b509392505050565b600082601f8301126110e0576110df610fc4565b5b81356110f0848260208601611089565b91505092915050565b60006020828403121561110f5761110e610db4565b5b600082013567ffffffffffffffff81111561112d5761112c610db9565b5b611139848285016110cb565b91505092915050565b61114b81610d0b565b811461115657600080fd5b50565b60008135905061116881611142565b92915050565b60006020828403121561118457611183610db4565b5b600061119284828501611159565b91505092915050565b60006020820190506111b06000830184610d36565b92915050565b60008115159050919050565b6111cb816111b6565b82525050565b60006040820190506111e66000830185610d36565b6111f360208301846111c2565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061123482610d2c565b915061123f83610d2c565b9250828201905080821115611257576112566111fa565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806112a457607f821691505b6020821081036112b7576112b661125d565b5b50919050565b60006040820190506112d26000830185610d36565b6112df6020830184610d36565b9392505050565b60006112f182610d2c565b91506112fc83610d2c565b9250828203905081811115611314576113136111fa565b5b92915050565b6000819050919050565b600061133f61133a61133584610ceb565b61131a565b610ceb565b9050919050565b600061135182611324565b9050919050565b600061136382611346565b9050919050565b61137381611358565b82525050565b600060408201905061138e600083018561136a565b61139b6020830184610d36565b9392505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026114047fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826113c7565b61140e86836113c7565b95508019841693508086168417925050509392505050565b600061144161143c61143784610d2c565b61131a565b610d2c565b9050919050565b6000819050919050565b61145b83611426565b61146f61146782611448565b8484546113d4565b825550505050565b600090565b611484611477565b61148f818484611452565b505050565b5b818110156114b3576114a860008261147c565b600181019050611495565b5050565b601f8211156114f8576114c9816113a2565b6114d2846113b7565b810160208510156114e1578190505b6114f56114ed856113b7565b830182611494565b50505b505050565b600082821c905092915050565b600061151b600019846008026114fd565b1980831691505092915050565b6000611534838361150a565b9150826002028217905092915050565b61154d82610e32565b67ffffffffffffffff81111561156657611565610fce565b5b611570825461128c565b61157b8282856114b7565b600060209050601f8311600181146115ae576000841561159c578287015190505b6115a68582611528565b86555061160e565b601f1984166115bc866113a2565b60005b828110156115e4578489015182556001820191506020850194506020810190506115bf565b8683101561160157848901516115fd601f89168261150a565b8355505b6001600288020188555050505b505050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611672602683610e3d565b915061167d82611616565b604082019050919050565b600060208201905081810360008301526116a181611665565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006116de602083610e3d565b91506116e9826116a8565b602082019050919050565b6000602082019050818103600083015261170d816116d1565b905091905056fea2646970667358221220e93c4b5b09d0cdcdddc565871e837b7a0954902b76587f50a526542e12ba9fe564736f6c63430008120033";

type FoundationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FoundationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Foundation__factory extends ContractFactory {
  constructor(...args: FoundationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _donationReceiver: PromiseOrValue<string>,
    _description: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Foundation> {
    return super.deploy(
      _donationReceiver,
      _description,
      overrides || {}
    ) as Promise<Foundation>;
  }
  override getDeployTransaction(
    _donationReceiver: PromiseOrValue<string>,
    _description: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _donationReceiver,
      _description,
      overrides || {}
    );
  }
  override attach(address: string): Foundation {
    return super.attach(address) as Foundation;
  }
  override connect(signer: Signer): Foundation__factory {
    return super.connect(signer) as Foundation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FoundationInterface {
    return new utils.Interface(_abi) as FoundationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Foundation {
    return new Contract(address, _abi, signerOrProvider) as Foundation;
  }
}
